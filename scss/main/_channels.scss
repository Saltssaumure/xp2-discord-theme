@use "../top/vars-scss" as *;

.sidebar-1tnWFu .container-1NXEtd {
    background: var(--xp2-background);
}

// Mini bar
.container-1-ERn5 {
    .header-3OsQeK,
    .header-3OsQeK:hover {
        background: $tabs-blue;
    }
}

.container-1-ERn5.bannerVisible-Vkyg1I {
    .header-3OsQeK,
    .header-3OsQeK:hover {
        background: transparentize($tabs-blue, 0.3);
    }
}

// Header text
.headerContent-2SNbie {
    color: white;
}

// Bring channels/threads closer together while maintaining original height
.wrapper-NhbLHG {
    padding: 0;

    .mainContent-20q_Hp {
        padding: 7px;
    }
}

// Channels
.content-1gYQeQ {
    border-radius: 0;
    padding-left: 0;

    // Threads
    .typeThread-2Aqh6X & {
        margin-left: 32px;
    }
}

// Channel in category
.containerDefault-3TQ5YN ~ .containerDefault-YUSmu3 {
    margin-left: 16px;
}

// Thread in category
.containerDefault-3TQ5YN ~ .container-1Bj0eq {
    margin-left: 24px;
}

// Remove original spine on threads
.spine-29OFwR,
.spineBorder-1-F4s1 {
    display: none;
}

// Respine time
// Channels in categories, and channels in threadgroups
:is(.containerDefault-3TQ5YN ~ .containerDefault-YUSmu3, .container-1Bj0eq .containerDefault-YUSmu3) .content-1gYQeQ::before {
    content: "";
    display: block;
    align-self: flex-start;
    $size: 16px;
    width: $size;
    height: $size;
}

// T-shaped spines
// Channels in categories followed by another channel, or a threadgroup and then another channnel
// Channels in threadgroups that are not the last channel
:is(
        .containerDefault-3TQ5YN ~ .containerDefault-YUSmu3:has(+ .containerDefault-YUSmu3, + .container-1Bj0eq + .containerDefault-YUSmu3),
        .container-1Bj0eq .containerDefault-YUSmu3:not(:last-child)
    ) {
    // New spine border
    .content-1gYQeQ {
        border-left: 1px dotted grey;

        // New spine
        &::before {
            border-bottom: 1px dotted grey;
        }
    }
}

// L-shaped spines
// Channels that are the inversion of the above selector, still in category or threadgroup
:is(
        .containerDefault-3TQ5YN
            ~ .containerDefault-YUSmu3:not(:has(+ .containerDefault-YUSmu3, + .container-1Bj0eq + .containerDefault-YUSmu3)),
        .container-1Bj0eq .containerDefault-YUSmu3:last-child
    ) {
    .content-1gYQeQ {
        &::before {
            border: dotted grey;
            border-width: 0 0 1px 1px;
        }
    }
}

// Thread group spines
.container-1Bj0eq:has(+ .containerDefault-YUSmu3) {
    border-left: 1px dotted grey;
}

// Channel name
.channelName-3KPsGw {
    text-decoration: underline;

    &::before {
        content: "#";
    }

    // // Text channel only
    // .content-1gYQeQ:has(path[d^="M5.88657 21"]) &::before {
    //     content: "#";
    // }
}

// Category name
.name-3BUDLf {
    background: var(--xp2-background-2);
    width: fit-content;
}
